[package]
name = "sal_calc"
version = "0.1.0"
authors = ["Nobuyasu Tomura <ntomura92@gmail.com>"]
edition = "2018"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

# [lib]
# name = "libsalcalcffi"
# crate-type = ["cdylib"]

[[bin]]
name = "generic"
path = "src/generic.rs"

[[bin]]
name = "serde_ex"
path = "src/serde_example.rs"

[[bin]]
name = "chrono_ex"
path = "src/chrono_example.rs"

[[bin]]
name = "date_fmt_ex"
path = "src/yyyy_mm_dd_fmt_example.rs"

[dependencies]
chrono = { version = "0.4", features = ["serde"] }
pancurses = "0.16"

# The core APIs, including the Serialize and Deserialize traits. Always
# required when using Serde. The "derive" feature is only required when
# using #[derive(Serialize, Deserialize)] to make Serde work with structs
# and enums defined in your crate.
serde = { version = "1.0", features = ["derive"] }

# Each data format lives in its own crate; the sample code below uses JSON
# but you may be using a different one.
serde_json = "1.0"
